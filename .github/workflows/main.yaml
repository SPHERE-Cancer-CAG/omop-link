name: Build and test omop_cdm
env:
  UV_VERSION: "0.7.13"
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:


jobs:
  quality-checks:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:

      - name: Check out repository
      - uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.6.1
        with:
          version: ${{ env.UV_VERSION }}
      - uses: actions/setup-python@v6.0.0
        with:
          python-version: 3.12
      - name: Check pyproject.toml and uv.lock
        run: uv lock --check
      - name: Install tox
        run: python -m pip install tox
        


  test:
    needs:
      - quality-checks
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11", "3.12"]
    # See https://github.com/snok/install-poetry#running-on-windows
    defaults:
      run:
        shell: bash


    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Install uv and setup uv caching
        uses: astral-sh/setup-uv@v6.6.1
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6.0.0
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --all-groups
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v2.0.2
      - name: Generate coverage results
        run: |
          uv run coverage run -m pytest --with-slow --with-network
          uv run coverage xml
          uv run coverage report -m
        shell: bash
      - name: Upload coverage report
        if: github.repository == 'linkml/linkml' && github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v5.5.1
        with:
          name: codecov-results-${{ matrix.os }}-${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
